"""Added cascading in models

Revision ID: 84bed183bddf
Revises: a3aa04f88902
Create Date: 2025-08-06 15:49:32.253366

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '84bed183bddf'
down_revision: Union[str, Sequence[str], None] = 'a3aa04f88902'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('class_sections_school_id_fkey'), 'class_sections', type_='foreignkey')
    op.drop_constraint(op.f('class_sections_section_id_fkey'), 'class_sections', type_='foreignkey')
    op.drop_constraint(op.f('class_sections_class_id_fkey'), 'class_sections', type_='foreignkey')
    op.create_foreign_key(None, 'class_sections', 'schools', ['school_id'], ['school_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'class_sections', 'classes', ['class_id'], ['class_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'class_sections', 'sections', ['section_id'], ['section_id'], ondelete='CASCADE')
    op.drop_constraint(op.f('classes_school_id_fkey'), 'classes', type_='foreignkey')
    op.create_foreign_key(None, 'classes', 'schools', ['school_id'], ['school_id'], ondelete='CASCADE')
    op.alter_column('parents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint(op.f('parents_school_id_fkey'), 'parents', type_='foreignkey')
    op.create_foreign_key(None, 'parents', 'schools', ['school_id'], ['school_id'], ondelete='CASCADE')
    op.add_column('schools', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.drop_constraint(op.f('sections_school_id_fkey'), 'sections', type_='foreignkey')
    op.create_foreign_key(None, 'sections', 'schools', ['school_id'], ['school_id'], ondelete='CASCADE')
    op.drop_constraint(op.f('student_class_class_section_id_fkey'), 'student_class', type_='foreignkey')
    op.drop_constraint(op.f('student_class_school_id_fkey'), 'student_class', type_='foreignkey')
    op.drop_constraint(op.f('student_class_reg_no_fkey'), 'student_class', type_='foreignkey')
    op.create_foreign_key(None, 'student_class', 'schools', ['school_id'], ['school_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'student_class', 'students', ['reg_no'], ['reg_no'], ondelete='CASCADE')
    op.create_foreign_key(None, 'student_class', 'class_sections', ['class_section_id'], ['class_section_id'], ondelete='CASCADE')
    op.drop_constraint(op.f('student_parent_reg_no_fkey'), 'student_parent', type_='foreignkey')
    op.drop_constraint(op.f('student_parent_parent_id_fkey'), 'student_parent', type_='foreignkey')
    op.create_foreign_key(None, 'student_parent', 'parents', ['parent_id'], ['parent_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'student_parent', 'students', ['reg_no'], ['reg_no'], ondelete='CASCADE')
    op.add_column('students', sa.Column('f_name', sa.String(), nullable=False))
    op.add_column('students', sa.Column('l_name', sa.String(), nullable=False))
    op.alter_column('students', 'school_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('students', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint(op.f('students_school_id_fkey'), 'students', type_='foreignkey')
    op.create_foreign_key(None, 'students', 'schools', ['school_id'], ['school_id'], ondelete='CASCADE')
    op.drop_column('students', 'fname')
    op.drop_column('students', 'lname')
    op.drop_constraint(op.f('subject_class_subject_id_fkey'), 'subject_class', type_='foreignkey')
    op.drop_constraint(op.f('subject_class_school_id_fkey'), 'subject_class', type_='foreignkey')
    op.drop_constraint(op.f('subject_class_class_section_id_fkey'), 'subject_class', type_='foreignkey')
    op.create_foreign_key(None, 'subject_class', 'schools', ['school_id'], ['school_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'subject_class', 'class_sections', ['class_section_id'], ['class_section_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'subject_class', 'subjects', ['subject_id'], ['subject_id'], ondelete='CASCADE')
    op.drop_constraint(op.f('subjects_school_id_fkey'), 'subjects', type_='foreignkey')
    op.create_foreign_key(None, 'subjects', 'schools', ['school_id'], ['school_id'], ondelete='CASCADE')
    op.drop_constraint(op.f('teacher_class_subjects_teacher_id_fkey'), 'teacher_class_subjects', type_='foreignkey')
    op.drop_constraint(op.f('teacher_class_subjects_class_section_id_fkey'), 'teacher_class_subjects', type_='foreignkey')
    op.drop_constraint(op.f('teacher_class_subjects_subject_id_fkey'), 'teacher_class_subjects', type_='foreignkey')
    op.drop_constraint(op.f('teacher_class_subjects_school_id_fkey'), 'teacher_class_subjects', type_='foreignkey')
    op.create_foreign_key(None, 'teacher_class_subjects', 'schools', ['school_id'], ['school_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'teacher_class_subjects', 'teachers', ['teacher_id'], ['teacher_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'teacher_class_subjects', 'class_sections', ['class_section_id'], ['class_section_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'teacher_class_subjects', 'subjects', ['subject_id'], ['subject_id'], ondelete='CASCADE')
    op.add_column('teachers', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.drop_constraint(op.f('teachers_school_id_fkey'), 'teachers', type_='foreignkey')
    op.create_foreign_key(None, 'teachers', 'schools', ['school_id'], ['school_id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'teachers', type_='foreignkey')
    op.create_foreign_key(op.f('teachers_school_id_fkey'), 'teachers', 'schools', ['school_id'], ['school_id'])
    op.drop_column('teachers', 'created_at')
    op.drop_constraint(None, 'teacher_class_subjects', type_='foreignkey')
    op.drop_constraint(None, 'teacher_class_subjects', type_='foreignkey')
    op.drop_constraint(None, 'teacher_class_subjects', type_='foreignkey')
    op.drop_constraint(None, 'teacher_class_subjects', type_='foreignkey')
    op.create_foreign_key(op.f('teacher_class_subjects_school_id_fkey'), 'teacher_class_subjects', 'schools', ['school_id'], ['school_id'])
    op.create_foreign_key(op.f('teacher_class_subjects_subject_id_fkey'), 'teacher_class_subjects', 'subjects', ['subject_id'], ['subject_id'])
    op.create_foreign_key(op.f('teacher_class_subjects_class_section_id_fkey'), 'teacher_class_subjects', 'class_sections', ['class_section_id'], ['class_section_id'])
    op.create_foreign_key(op.f('teacher_class_subjects_teacher_id_fkey'), 'teacher_class_subjects', 'teachers', ['teacher_id'], ['teacher_id'])
    op.drop_constraint(None, 'subjects', type_='foreignkey')
    op.create_foreign_key(op.f('subjects_school_id_fkey'), 'subjects', 'schools', ['school_id'], ['school_id'])
    op.drop_constraint(None, 'subject_class', type_='foreignkey')
    op.drop_constraint(None, 'subject_class', type_='foreignkey')
    op.drop_constraint(None, 'subject_class', type_='foreignkey')
    op.create_foreign_key(op.f('subject_class_class_section_id_fkey'), 'subject_class', 'class_sections', ['class_section_id'], ['class_section_id'])
    op.create_foreign_key(op.f('subject_class_school_id_fkey'), 'subject_class', 'schools', ['school_id'], ['school_id'])
    op.create_foreign_key(op.f('subject_class_subject_id_fkey'), 'subject_class', 'subjects', ['subject_id'], ['subject_id'])
    op.add_column('students', sa.Column('lname', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('students', sa.Column('fname', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.create_foreign_key(op.f('students_school_id_fkey'), 'students', 'schools', ['school_id'], ['school_id'])
    op.alter_column('students', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('students', 'school_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('students', 'l_name')
    op.drop_column('students', 'f_name')
    op.drop_constraint(None, 'student_parent', type_='foreignkey')
    op.drop_constraint(None, 'student_parent', type_='foreignkey')
    op.create_foreign_key(op.f('student_parent_parent_id_fkey'), 'student_parent', 'parents', ['parent_id'], ['parent_id'])
    op.create_foreign_key(op.f('student_parent_reg_no_fkey'), 'student_parent', 'students', ['reg_no'], ['reg_no'])
    op.drop_constraint(None, 'student_class', type_='foreignkey')
    op.drop_constraint(None, 'student_class', type_='foreignkey')
    op.drop_constraint(None, 'student_class', type_='foreignkey')
    op.create_foreign_key(op.f('student_class_reg_no_fkey'), 'student_class', 'students', ['reg_no'], ['reg_no'])
    op.create_foreign_key(op.f('student_class_school_id_fkey'), 'student_class', 'schools', ['school_id'], ['school_id'])
    op.create_foreign_key(op.f('student_class_class_section_id_fkey'), 'student_class', 'class_sections', ['class_section_id'], ['class_section_id'])
    op.drop_constraint(None, 'sections', type_='foreignkey')
    op.create_foreign_key(op.f('sections_school_id_fkey'), 'sections', 'schools', ['school_id'], ['school_id'])
    op.drop_column('schools', 'created_at')
    op.drop_constraint(None, 'parents', type_='foreignkey')
    op.create_foreign_key(op.f('parents_school_id_fkey'), 'parents', 'schools', ['school_id'], ['school_id'])
    op.alter_column('parents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint(None, 'classes', type_='foreignkey')
    op.create_foreign_key(op.f('classes_school_id_fkey'), 'classes', 'schools', ['school_id'], ['school_id'])
    op.drop_constraint(None, 'class_sections', type_='foreignkey')
    op.drop_constraint(None, 'class_sections', type_='foreignkey')
    op.drop_constraint(None, 'class_sections', type_='foreignkey')
    op.create_foreign_key(op.f('class_sections_class_id_fkey'), 'class_sections', 'classes', ['class_id'], ['class_id'])
    op.create_foreign_key(op.f('class_sections_section_id_fkey'), 'class_sections', 'sections', ['section_id'], ['section_id'])
    op.create_foreign_key(op.f('class_sections_school_id_fkey'), 'class_sections', 'schools', ['school_id'], ['school_id'])
    # ### end Alembic commands ###
